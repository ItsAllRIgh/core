# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.hibernate.ddl-auto=none
# Naming strategy
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.datasource.url=jdbc:mysql://localhost/legends?useSSL=false
spring.datasource.username=legends
spring.datasource.password=legends
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# THYMELEAF (ThymeleafAutoConfiguration)
spring.thymeleaf.cache=true
# Enable template caching.
spring.thymeleaf.check-template=true
# Check that the template exists before rendering it.
spring.thymeleaf.check-template-location=true
# Check that the templates location exists.
spring.thymeleaf.content-type=text/html
# Content-Type value.
spring.thymeleaf.enabled=true
# Enable MVC Thymeleaf view resolution.
spring.thymeleaf.encoding=UTF-8
# Template encoding.
#spring.thymeleaf.excluded-view-names= character.html
# Comma-separated list of view names that should be excluded from resolution.
#spring.thymeleaf.mode=HTML5
# Template mode to be applied to templates. See also StandardTemplateModeHandlers.
spring.thymeleaf.prefix=classpath:/templates/
# Prefix that gets prepended to view names when building a URL.
spring.thymeleaf.suffix=.html
# Suffix that gets appended to view names when building a URL.
#spring.thymeleaf.template-resolver-order=
# Order of the template resolver in the chain.
#spring.thymeleaf.view-names=
# Comma-separated list of view names that can be resolved.

